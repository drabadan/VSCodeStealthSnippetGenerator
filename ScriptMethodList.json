procedure SetGlobal(GlobalRegion : String;VarName : String;VarValue : String);
function GetGlobal(GlobalRegion : String;VarName : String) : String;
procedure Connect;
procedure Disconnect;
procedure SetARStatus(Value : Boolean);
function GetARStatus : Boolean;
procedure SetPauseScriptOnDisconnectStatus(Value : Boolean);
function GetPauseScriptOnDisconnectStatus : Boolean;
function Connected : Boolean;
function CharName : String;
function ProfileShardName : String;
function ShardName : String;
function Self : Cardinal;
function SelfID : Cardinal;
function Sex : Byte;
function Gold : Cardinal;
function ConnectedTime : TDateTime;
function DisconnectedTime : TDateTime;
function Backpack : Cardinal;
function Ground : Cardinal;
procedure Wait(WaitTimeMS : Integer);
function MsToDateTime(TimeMS : Word) : TDateTime;
function Timer : Cardinal;
function GetTickCount : Cardinal;
function LineID : Cardinal;
function FoundedParamID : Integer;
function LineType : Word;
function LineName : String;
function LineTime : TDateTime;
function LineMsgType : Byte;
function LineTextColor : Word;
function LineTextFont : Word;
function LineIndex : Integer;
function LineCount : Integer;
procedure AddToSystemJournal(Text : String);
procedure AddToJournal(Text : String);
function LastJournalMessage : String;
function InJournal(Str : String) : Integer;
function InJournalBetweenTimes(Str : String;TimeBegin : TDateTime;TimeEnd : TDateTime) : Integer;
function Journal(StringIndex : Integer) : String;
procedure SetJournalLine(StringIndex : Integer;Text : String);
procedure ClearJournal;
procedure ClearSystemJournal;
function LowJournal : Integer;
function HighJournal : Integer;
function WaitJournalLine(StartTime : TDateTime;Str : String;MaxWaitTimeMS : Integer) : Boolean;
function WaitJournalLineSystem(StartTime : TDateTime;Str : String;MaxWaitTimeMS : Integer) : Boolean;
function IsObjectExists(ObjID : Cardinal) : Boolean;
function RhandLayer : Byte;
function LhandLayer : Byte;
function ShoesLayer : Byte;
function PantsLayer : Byte;
function ShirtLayer : Byte;
function HatLayer : Byte;
function GlovesLayer : Byte;
function RingLayer : Byte;
function TalismanLayer : Byte;
function NeckLayer : Byte;
function HairLayer : Byte;
function WaistLayer : Byte;
function TorsoLayer : Byte;
function BraceLayer : Byte;
function BeardLayer : Byte;
function TorsoHLayer : Byte;
function EarLayer : Byte;
function ArmsLayer : Byte;
function CloakLayer : Byte;
function BpackLayer : Byte;
function RobeLayer : Byte;
function EggsLayer : Byte;
function LegsLayer : Byte;
function HorseLayer : Byte;
function RstkLayer : Byte;
function NRstkLayer : Byte;
function SellLayer : Byte;
function BankLayer : Byte;
function BMSearch(StartPos : Integer;const S : String;const P : String) : Integer;
function IsFigureText(s : String) : Boolean;
function AnsiByteArrayToString(AnsiBytes : array of byte) : String;
procedure StrBreakApart(const S : String;Delimeter : String;Parts : TStrings);
function RandomRange(const AFrom : Integer;ATo : Integer) : Integer;
procedure ShowMessage(const Msg : String);
function Sign(const AValue : Integer) : ShortInt;
function PlayWav(FileName : String) : Boolean;
procedure SetEventProc(Eventname : TPacketEvent;Procname : String);
procedure HTTP_Get(URL : String);
function HTTP_Post(URL : String;PostData : TStringList) : String;
function HTTP_Body : String;
function HTTP_Header : String;
function ICQConnected : Boolean;
procedure ICQConnect(UIN : String;password : String);
procedure ICQDisconnect;
procedure ICQSetXStatus(Num : Byte);
procedure ICQSetStatus(Num : Byte);
procedure ICQSendText(DestinationUIN : String;Text : String);
procedure Alarm;
function MessageBoxTimeOut(Msg : String;DlgType : TMsgDlgType;Buttons : TMsgDlgButtons;TimeOutInterval : Cardinal) : Integer;
procedure IRCConnect(Host : String;Port : Word);
procedure IRCDisconnect;
function IRCConnected : Boolean;
procedure IRCSay(ATarget : String;AMsg : String);
procedure IRCJoin(AChannel : String;AKey : String = '' );
procedure IRCRaw(ALine: String);
procedure IRCSetNickName(NickName : String);
function UseProxy : Boolean;
function ProxyIP : String;
function ProxyPort : Word;
function ProfileName : String;
function ChangeProfile(Name : String) : Integer;
function StealthInfo : TAboutStealth;
function StealthPath : String;
function CurrentScriptPath : String;
function StealthProfilePath : String;
function ShardPath : String;
procedure PauseCurrentScript;
procedure Halt;
function CurrentLine : Integer;
procedure WinExec(FileName : String;Parameters : String = '');
function CharTitle : String;
function Armor : SmallInt;
function Weight : Word;
function MaxWeight : Word;
function Race : Byte;
function WorldNum : Byte;
function PetsCurrent : Byte;
function PetsMax : Byte;
function FireResist : Word;
function ColdResist : Word;
function PoisonResist : Word;
function EnergyResist : Word;
function LastContainer : Cardinal;
function LastTarget : Cardinal;
function LastAttack : Cardinal;
function LastStatus : Cardinal;
function LastObject : Cardinal;
function Hidden : Boolean;
function Poisoned : Boolean;
function Paralyzed : Boolean;
function Dead : Boolean;
function WarMode : Boolean;
function WarTargetID : Cardinal;
procedure SetWarMode(Value : Boolean);
procedure Attack(ObjdID : Cardinal);
procedure UseSelfPaperdollScroll;
procedure UseOtherPaperdollScroll(ID : Cardinal);
function GetName(ObjID : Cardinal) : String;
function Str : Integer;
function Int : Integer;
function Dex : Integer;
function Life : Integer;
function HP : Integer;
function Mana : Integer;
function Stam : Integer;
function MaxLife : Integer;
function MaxHP : Integer;
function MaxMana : Integer;
function MaxStam : Integer;
function Luck : Integer;
function ExtendedInfo : TExtendedInfo;
function GetParent(ObjID : Cardinal) : Cardinal;
function ObjAtLayer(LayerType : Byte) : Cardinal;
function ObjAtLayerEx(LayerType : Byte;PlayerID : Cardinal) : Cardinal;
function GetLayer(Obj : Cardinal) : Byte;
function TargetPresent : Boolean;
function TargetID : Cardinal;
function WaitForTarget(MaxWaitTimeMS : Integer) : Boolean;
procedure CancelTarget;
procedure TargetToObject(ObjectID : Cardinal);
procedure TargetToXYZ(X : Word;Y : Word;Z : ShortInt);
procedure TargetToTile(TileModel : Word;X : Integer;Y : Integer;Z : Integer);
procedure WaitTargetObject(ObjID : Cardinal);
procedure WaitTargetTile(Tile : Word;X : Integer;Y : Integer;Z : Integer);
procedure WaitTargetXYZ(X : Integer;Y : Integer;Z : Integer);
procedure WaitTargetSelf;
procedure WaitTargetType(ObjType : Word);
procedure CancelWaitTarget;
procedure WaitTargetGround(ObjType : Word);
procedure WaitTargetLast;
procedure UOSay(Text : String);
procedure UOSayColor(Text : String;Color : Word);
procedure ConsoleEntryReply(Text : String);
procedure ConsoleEntryUnicodeReply(Text : String);
function UseSkill(SkillName : String) : Boolean;
procedure SkillLockState(SkillName : String;skillState : Byte);
function GetSkillValue(SkillName : String) : Double;
function GetSkillCurrentValue(SkillName : String) : Double;
function GetSkillCap(SkillName : String) : Double;
procedure UseObject(ObjectID : Cardinal);
function UseType(ObjType : Word;Color : Word) : Cardinal;
function UseFromGround(ObjType : Word;Color : Word) : Cardinal;
procedure ClickOnObject(ObjectID : Cardinal);
function Cast(SpellName : String) : Boolean;
function GetActiveAbility : String;
procedure UsePrimaryAbility;
procedure ToggleFly;
procedure UseSecondaryAbility;
procedure ClearJournalIgnore;
procedure ClearChatUserIgnore;
procedure AddJournalIgnore(Str : String);
procedure AddChatUserIgnore(User : String);
function FindType(ObjType : Word;Container : Cardinal) : Cardinal;
function FindTypeEx(ObjType : Word;Color : Word;Container : Cardinal;InSub : Boolean) : Cardinal;
function FindTypesArrayEx(ObjTypes : array of Word;Colors : array of Word;Containers : array of Cardinal;InSub : Boolean) : Cardinal;
function FindNotoriety(ObjType : Word;Notoriety : Byte) : Cardinal;
function FindAtCoord(X : Word;Y : Word) : Cardinal;
procedure Ignore(ObjID : Cardinal);
procedure IgnoreOff(ObjID : Cardinal);
procedure IgnoreReset;
function GetIgnoreList(var UserList : TStringList) : Boolean;
function GetFindedList(var UserList : TStringList) : Boolean;
function FindItem : Cardinal;
function FindCount : Integer;
function FindQuantity : Integer;
function FindFullQuantity : Integer;
function PredictedX : Word;
function PredictedY : Word;
function PredictedZ : ShortInt;
function PredictedDirection : Byte;
function GetX(ObjID : Cardinal) : Integer;
function GetY(ObjID : Cardinal) : Integer;
function GetZ(ObjID : Cardinal) : ShortInt;
function GetAltName(ObjID : Cardinal) : String;
function GetTitle(ObjID : Cardinal) : String;
function GetCliloc(ObjID : Cardinal) : String;
function GetType(ObjID : Cardinal) : Word;
function GetQuantity(ObjID : Cardinal) : Integer;
function GetPrice(ObjID : Cardinal) : Cardinal;
function GetDirection(ObjID : Cardinal) : Byte;
function GetDistance(ObjID : Cardinal) : Integer;
function GetColor(ObjID : Cardinal) : Word;
function GetStr(ObjID : Cardinal) : Integer;
function GetInt(ObjID : Cardinal) : Integer;
function GetDex(ObjID : Cardinal) : Integer;
function GetHP(ObjID : Cardinal) : Integer;
function GetMaxHP(ObjID : Cardinal) : Integer;
function GetMana(ObjID : Cardinal) : Integer;
function GetMaxMana(ObjID : Cardinal) : Integer;
function GetStam(ObjID : Cardinal) : Integer;
function GetMaxStam(ObjID : Cardinal) : Integer;
function GetNotoriety(ObjID : Cardinal) : Byte;
function IsWarMode(ObjID : Cardinal) : Boolean;
function IsNPC(ObjID : Cardinal) : Boolean;
function IsDead(ObjID : Cardinal) : Boolean;
function IsRunning(ObjID : Cardinal) : Boolean;
function IsContainer(ObjID : Cardinal) : Boolean;
function IsHidden(ObjID : Cardinal) : Boolean;
function IsMovable(ObjID : Cardinal) : Boolean;
function IsYellowHits(ObjID : Cardinal) : Boolean;
function IsPoisoned(ObjID : Cardinal) : Boolean;
function IsParalyzed(ObjID : Cardinal) : Boolean;
function IsFemale(ObjID : Cardinal) : Boolean;
function DragItem(ItemID : Cardinal;Count : Integer) : Boolean;
function DropItem(MoveIntoID : Cardinal;X : Integer;Y : Integer;Z : Integer) : Boolean;
function MoveItem(ItemID : Cardinal;Count : Integer;MoveIntoID : Cardinal;X : Integer;Y : Integer;Z : Integer) : Boolean;
function Grab(ItemID : Cardinal;Count : Integer) : Boolean;
function Drop(ItemID : Cardinal;Count : Integer;X : Integer;Y : Integer;Z : Integer) : Boolean;
function DropHere(ItemID : Cardinal) : Boolean;
function MoveItems(Container : Cardinal;ItemsType : Word;ItemsColor : Word;MoveIntoID : Cardinal;X : Integer;Y : Integer;Z : Integer;DelayMS : Integer) : Boolean;
function MoveItemsEx(Container : Cardinal;ItemsType : Word;ItemsColor : Word;MoveIntoID : Cardinal;X : Integer;Y : Integer;Z : Integer;DelayMS : Integer;MaxItems : Integer) : Boolean;
procedure RequestContextMenu(ID : Cardinal);
procedure SetContextMenuHook(MenuID : Cardinal;EntryNumber : Byte);
function IsTrade : Boolean;
function GetTradeContainer(TradeNum : Byte;Num : Byte) : Cardinal;
function TradeCheck(TradeNum : Byte;Num : Byte) : Boolean;
function GetTradeOpponent(TradeNum : Byte) : Cardinal;
function GetTradeOpponentName(TradeNum : Byte) : String;
function TradeCount : Byte;
procedure ConfirmTrade(TradeNum : Byte);
function CancelTrade(TradeNum : Byte) : Boolean;
procedure WaitMenu(UP : String;UC : String);
procedure CloseMenu;
procedure AutoMenu(UP : String;UC : String);
procedure CancelMenu;
function MenuHookPresent : Boolean;
function MenuPresent : Boolean;
procedure WaitGump(Value : String);
procedure GumpAutoTextEntry(TextEntryID : Integer;Value : String);
procedure GumpAutoRadiobutton(RadiobuttonID : Integer;Value : Integer);
procedure GumpAutoCheckBox(CheckBoxID : Integer;Value : Integer);
function NumGumpButton(GumpIndex : Word;Value : Integer) : Boolean;
function NumGumpTextEntry(GumpIndex : Word;TextEntryID : Integer;Value : String) : Boolean;
function NumGumpRadiobutton(GumpIndex : Word;RadiobuttonID : Integer;Value : Integer) : Boolean;
function NumGumpCheckBox(GumpIndex : Word;CBID : Integer;Value : Integer) : Boolean;
procedure WaitTextEntry(Value : String);
function GetGumpsCount : Cardinal;
function IsGump : Boolean;
function GetGumpSerial(GumpIndex : Word) : Cardinal;
function GetGumpID(GumpIndex : Word) : Cardinal;
function IsGumpCanBeClosed(GumpIndex : Word) : Boolean;
procedure GetGumpTextLines(GumpIndex : Word;var TL : TStringList);
procedure GetGumpFullLines(GumpIndex : Word;var TL : TStringList);
procedure GetGumpShortLines(GumpIndex : Word;var TL : TStringList);
procedure GetGumpButtonsDescription(GumpIndex : Word;var TL : TStringList);
procedure GetGumpInfo(GumpIndex : Word;var GumpInfo : TGumpInfo);
procedure CloseSimpleGump(GumpIndex : Word);
procedure AddGumpIgnoreBySerial(Serial : Cardinal);
procedure AddGumpIgnoreByID(ID : Cardinal);
procedure ClearGumpsIgnore;
function WearItem(Layer : Byte;Obj : Cardinal) : Boolean;
function Disarm : Boolean;
function Equip(Layer : Byte;Obj : Cardinal) : Boolean;
function Equipt(Layer : Byte;ObjType : Word) : Boolean;
function Unequip(Layer : Byte) : Boolean;
function Undress : Boolean;
function DressSavedSet : Boolean;
function EquipDressSet : Boolean;
procedure SetDress;
function Count(ObjType : Word) : Integer;
function CountGround(ObjType : Word) : Integer;
function CountEx(ObjType : Word;Color : Word;Container : Cardinal) : Integer;
function BP : Word;
function BM : Word;
function GA : Word;
function GS : Word;
function MR : Word;
function NS : Word;
function SA : Word;
function SS : Word;
function BPCount : Word;
function BMCount : Word;
function GACount : Word;
function GSCount : Word;
function MRCount : Word;
function NSCount : Word;
function SACount : Word;
function SSCount : Word;
procedure AutoBuy(ItemType : Word;ItemColor : Word;Quantity : Word);
procedure AutoBuyEx(ItemType : Word;ItemColor : Word;Quantity : Word;Price : Cardinal;Name : String);
procedure GetShopList(var List : TStringList);
procedure ClearShopList;
function GetAutoBuyDelay : Word;
procedure SetAutoBuyDelay(Value : Word);
procedure AutoSell(ItemType : Word;ItemColor : Word;Quantity : Word);
function GetAutoSellDelay : Word;
procedure SetAutoSellDelay(Value : Word);
function GetTileFlags(Group : Byte;Tile : Word) : Cardinal;
function ConvertIntegerToFlags(group : Byte;I : Cardinal) : TTileDataFlagSet;
function GetLayerCount(x : Word;y : Word;WorldNum : Byte) : Byte;
function GetLandTileData(Tile : Word) : TLandTileData;
function GetStaticTileData(Tile : Word) : TStaticTileData;
function ReadStaticsXY(X : Word;Y : Word;WorldNum : Byte) : TStaticCell;
function GetSurfaceZ(X : Word;Y : Word;WorldNum : Byte) : ShortInt;
function GetMapCell(X : Word;Y : Word;WorldNum : Byte) : TMapCell;
function IsWorldCellPassable(CurrX : Word;CurrY : Word;Z : ShortInt;DestX : Word;DestY : Word;var DestZ : ShortInt;WorldNum : Byte) : Boolean;
function GetLandTilesArray(Xmin : Word;Ymin : Word;Xmax : Word;Ymax : Word;WorldNum : Byte;TileType : Word;var LandTilesArray : TFoundTilesArray) : Word;
function GetLandTilesArrayEx(Xmin : Word;Ymin : Word;Xmax : Word;Ymax : Word;WorldNum : Byte;TileTypes : array of Word;var LandTilesArray : TFoundTilesArray) : Word;
function GetStaticTilesArray(Xmin : Word;Ymin : Word;Xmax : Word;Ymax : Word;WorldNum : Byte;TileType : Word;var FoundTilesArray : TFoundTilesArray) : Word;
function GetStaticTilesArrayEx(Xmin : Word;Ymin : Word;Xmax : Word;Ymax : Word;WorldNum : Byte;TileTypes : array of Word;var FoundTilesArray : TFoundTilesArray) : Word;
procedure FillNewWindow(s : String);
procedure FillInfoWindow(s : String);
procedure ClearInfoWindow;
procedure SetSilentMode(Value : Boolean);
procedure SetEasyUO(num : Integer;Regvalue : String);
function GetEasyUO(num : Integer) : String;
function EUO2Type(EUO : String) : Word;
function EUO2ID(EUO : String) : Cardinal;
procedure RequestStats(ObjID : Cardinal);
procedure HelpRequest;
procedure QuestRequest;
procedure RenameMobile(Mob_ID : Cardinal;NewName : String);
procedure OpenDoor;
procedure Bow;
procedure Salute;
function AddFigure(const figure : TMapFigure) : Cardinal;
function RemoveFigure(id : Cardinal) : Boolean;
function UpdateFigure(id : Cardinal;const figure : TMapFigure) : Boolean;
procedure ClearFigures;
function CheckLag(timeoutMS : Integer) : Boolean;
procedure SetRunUnmountTimer(Value : Word);
procedure SetWalkMountTimer(Value : Word);
procedure SetRunMountTimer(Value : Word);
procedure SetWalkUnmountTimer(Value : Word);
function GetRunUnMountTimer : Word;
function GetWalkMountTimer : Word;
function GetRunMountTimer : Word;
function GetWalkUnmountTimer : Word;
function GetNextStepZ(CurrX : Word;CurrY : Word;DestX : Word;DestY : Word;WorldNum : Byte;Z : ShortInt) : ShortInt;
function Dist(X1 : Word;Y1 : Word;X2 : Word;Y2 : Word) : Word;
function CalcDir(Xfrom : Integer;Yfrom : Integer;Xto : Integer;Yto : Integer) : Byte;
function Raw_Move(Direction : Byte;Running : Boolean) : Boolean;
function Step(Direction : Byte;Running : Boolean) : Byte;
function StepQ(Direction : Byte;Running : Boolean) : Integer;
procedure SetBadLocation(X : Word;Y : Word);
procedure SetGoodLocation(X : Word;Y : Word);
procedure ClearBadLocationList;
procedure SetBadObject(ObjType : Word;Color : Word;Radius : Byte);
procedure ClearBadObjectList;
function MoveXY(Xdst : Word;Ydst : Word;Optimized : Boolean;Accuracy : Integer;Running : Boolean) : Boolean;
function newMoveXY(Xdst : Word;Ydst : Word;Optimized : Boolean;Accuracy : Integer;Running : Boolean) : Boolean;
function MoveXYZ(Xdst : Word;Ydst : Word;Zdst : ShortInt;AccuracyXY : Integer;AccuracyZ : Integer;Running : Boolean) : Boolean;
function GetPathArray(DestX : Word;DestY : Word;Optimized : Boolean;Accuracy : Integer;var PathArray : TPathArray) : Integer;
function GetPathArray3D(StartX : Word;StartY : Word;StartZ : ShortInt;FinishX : Word;FinishY : Word;FinishZ : ShortInt;WorldNum : Byte;AccuracyXY : Integer;AccuracyZ : Integer;Run : Boolean;var PathArray : TPathArray) : Integer;
function GetTooltip(ObjID : Cardinal) : String;
function SetCatchBag(ObjID : Cardinal) : Byte;
procedure UnsetCatchBag;
function EmptyContainer(Container : Cardinal;DestContainer : Cardinal;DelayMS : Word) : Boolean;
procedure SetStatState(statNum : Byte;statState : Byte);
function GetSelfHandle : Cardinal;
function GetStaticArt(Id : Cardinal;Hue : Word) : TBitmap;
function CheckLOS(xf : Integer;yf : Integer;zf : Integer;xt : Integer;yt : Integer;zt : Integer;WorldNum : Byte) : Boolean;
procedure GetContextMenu(var list : TStringList);
procedure ClearContextMenu;
function MobileCanBeRenamed(Mob_ID : Cardinal) : Boolean;
procedure ClientPrint(Text : String);
procedure ClientPrintEx(SenderID : Cardinal;Color : Word;Font : Word;Text : String);
function GetQuestArrow(var point : TPoint) : Boolean;
procedure InviteToParty(ID : Cardinal);
procedure RemoveFromParty(ID : Cardinal);
procedure PartyPrivateMessageTo(ID : Cardinal;Msg : String);
procedure PartySay(Msg : String);
procedure PartyCanLootMe(Value : Boolean);
procedure PartyAcceptInvite;
procedure PartyDeclineInvite;
procedure PartyLeave;
function PartyMembersList : TStringList;
function InParty : Boolean;
function GetToolTipRec(ObjID : Cardinal) : TClilocRec;
function GetBuffBarInfo : TBuffBarInfo;
function GetClilocByID(ClilocID : Cardinal) : String;
procedure CloseClientUIWindow(UIWindowType : TUIWindowType;ID : Cardinal);
function IsActiveSpellAbility(SpellName : String) : Boolean;
procedure ClientRequestObjectTarget;
procedure ClientRequestTileTarget;
function ClientTargetResponsePresent : Boolean;
function WaitForClientTargetResponse(MaxWaitTimeMS : Integer) : Boolean;
function ClientTargetResponse : TTargetInfo;
procedure UseVirtue(VirtueName : String);
procedure ReqVirtuesGump;
procedure GetMenuItems(Caption : String;var TL : TStringList);
procedure GetLastMenuItems(var TL : TStringList);
function GameServerIPString : String;
procedure CloseClientGump(ID : Cardinal);
function ClientHide(ID : Cardinal) : Boolean;
function InputBox(ACaption : String;APrompt : String;ADefault : String) : String;
procedure AddToDebugJournal(Msg : String);
function ExtChangeProfile(ProfileName : String;ShardName : String = '';CharName : String = '') : Integer;
procedure PrintScriptMethodsList(FileName : String = '; SortedList : Boolean = False);
procedure WinExec(FileName : String; Parameters : String = ');
